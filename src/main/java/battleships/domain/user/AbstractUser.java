package battleships.domain.user;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import java.security.Principal;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public abstract class AbstractUser implements UserDetails, Principal {
    private boolean autoGenerated = false;

    public AbstractUser(boolean autoGenerated) {
        this.autoGenerated = autoGenerated;
    }

    public abstract UserRole getRole();


    public final boolean isAutoGenerated() {
        return autoGenerated;
    }

    @Override
    public final String getName() {
        return getUsername();
    }

    @Override
    public final Collection<? extends GrantedAuthority> getAuthorities() {
        UserRole role;
        if (isAutoGenerated()) role = UserRole.GUEST;
        else role = getRole();
        List<GrantedAuthority> authorities = new ArrayList<>();
        List<String> roles = Stream.of(UserRole.values())
                .filter(r -> r.getValue() <= role.getValue())
                .map(UserRole::name)
                .collect(Collectors.toList());
        for (String s : roles) authorities.add(new SimpleGrantedAuthority(s));
        return authorities;
    }

}
